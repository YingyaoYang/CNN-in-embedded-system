/*
 * lcd.h
 *
 *  Created on: 2019年10月25日
 *      Author: YYY
 */

#ifndef LCD_H_
#define LCD_H_

#include "fsl_gpio.h"
#include "pin_mux.h"
#include "board.h"
#include "fsl_clock.h"
#define LCD_SCK_PORT 1U  //SPI时钟线
#define LCD_SCK 3U
#define LCD_CS_PORT  0U	//SPI片选
#define LCD_CS 26U
#define LCD_RS_PORT 1U
#define LCD_RS  5U
#define LCD_DC_PORT 1U //数据
#define LCD_DC 1U
#define LCD_SDI_PORT  1U  //MISO
#define LCD_SDI 2U

#define WHITE       0xFFFF
#define BLACK       0x0000
#define BLUE        0x001F
#define BRED        0XF81F
#define GRED        0XFFE0
#define GBLUE       0X07FF
#define RED         0xF800
#define MAGENTA     0xF81F
#define GREEN       0x07E0
#define CYAN        0x7FFF
#define YELLOW      0xFFE0
#define BROWN       0XBC40  //棕色
#define BRRED       0XFC07  //棕红色
#define GRAY        0X8430  //灰色

//GUI颜色
#define DARKBLUE      0X01CF   //深蓝色
#define LIGHTBLUE     0X7D7C   //浅蓝色
#define GRAYBLUE      0X5458   //灰蓝色
//以上三色为PANEL的颜色

#define LIGHTGREEN    0X841F  //浅绿色
#define LGRAY         0XC618  //浅灰色(PANNEL),窗体背景色

#define LGRAYBLUE     0XA651  //浅灰蓝色(中间层颜色)
#define LBBLUE        0X2B12  //浅棕蓝色(选择条目的反色)

//定义LCD的尺寸（240*320像素）
#define LCD_W 240
#define LCD_H 320

extern	void LCD_Init(void);    //LCD初始化
extern	void LCD_Clear(uint16_t background);    //LCD清屏
extern	void LCD_DrawPoint(uint16_t x,uint16_t y,uint16_t color);    //画点
extern 	void LCD_DrawCircle(uint16_t x,uint16_t y,uint8_t r,uint16_t color);  //画圆
extern 	void LCD_DrawLine(uint16_t x1,uint16_t y1,
	 uint16_t x2, uint16_t y2,uint16_t color);    //画线
extern	void LCD_DrawSurface(uint16_t x1,uint16_t y1,
     uint16_t x2,uint16_t y2,uint16_t color);    //填充矩形区域
extern	void LCD_ShowCharactor(uint16_t  x,uint16_t y,uint16_t fontcolor,
	 uint16_t groundbackcolor,const uint8_t *p);    //显示16*16汉字
extern	void LCD_ShowString(uint16_t  x,uint16_t y,uint16_t fontcolor,
	 uint16_t groundbackcolor,const uint8_t *p);
extern	void LCD_aotu(uint16_t x,uint16_t y,uint16_t x1,uint16_t y1,uint8_t s); //凹凸按钮


extern	void spisend_data(unsigned char data);
extern 	void Delay_ms(uint32_t ms);
extern	void Delay_us(uint32_t us);
extern void LCD_WR_REG_DATA(uint8_t reg,uint16_t da);
extern void LCD_WR_REG(uint8_t da);
extern void LCD_WR_DATA8(uint8_t da);
extern void Address_set(uint16_t x1,uint16_t y1,uint16_t x2,uint16_t y2);
extern void LCD_WR_DATA(uint16_t da);
extern uint32_t mypow(uint8_t m,uint8_t n);
extern uint16_t uint8_to_color(uint8_t x);
extern void LCD_show_image_free(uint16_t x,uint16_t y,uint8_t* image,
		uint16_t h,uint16_t w,float xr,float yr);
extern void LCD_show_image(uint16_t x,uint16_t y,uint8_t* image,
		uint16_t h,uint16_t w,uint8_t rate);

// ------------------  汉字字模的数据结构定义 ------------------------ //
typedef struct typFNT_GB16                 // 汉字字模数据结构
{
       signed char Index[2];               // 汉字内码索引
       char Msk[32];                              // 点阵码数据
} typFNT_GB16;

typedef struct _HEADCOLOR
{
   unsigned char scan;
   unsigned char gray;
   unsigned short w;
   unsigned short h;
   unsigned char is565;
   unsigned char rgb;
}HEADCOLOR;

extern	void LCD_WR_DATA8(uint8_t da); //发送数据-8位参数
extern	void Address_set(uint16_t x1,uint16_t y1,uint16_t x2,uint16_t y2);

const static uint8_t  nAsciiDot[] =              // ASCII
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // (空）
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x18,0x3C,0x3C,0x3C,0x18,0x18,  //!（感叹号）
	0x18,0x00,0x18,0x18,0x00,0x00,0x00,0x00,

	0x00,0x66,0x66,0x66,0x24,0x00,0x00,0x00,  //"（双引号）
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x36,0x36,0x7F,0x36,0x36,  //#（井号）
	0x36,0x7F,0x36,0x36,0x00,0x00,0x00,0x00,

	0x18,0x18,0x3E,0x63,0x43,0x03,0x3E,0x60,  //$（美元符）
	0x61,0x63,0x3E,0x18,0x18,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x43,0x63,0x30,0x18,  //%（百分号）
	0x0C,0x06,0x63,0x61,0x00,0x00,0x00,0x00,

	0x00,0x00,0x1C,0x36,0x36,0x1C,0x6E,0x3B,  //&（与）
	0x33,0x33,0x33,0x6E,0x00,0x00,0x00,0x00,

	0x00,0x0C,0x0C,0x0C,0x06,0x00,0x00,0x00,  //'（单引号）
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x30,0x18,0x0C,0x0C,0x0C,0x0C,  //(（左括号）
	0x0C,0x0C,0x18,0x30,0x00,0x00,0x00,0x00,

	0x00,0x00,0x0C,0x18,0x30,0x30,0x30,0x30,  //)（右括号）
	0x30,0x30,0x18,0x0C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x66,0x3C,0xFF,  //*（星号）
	0x3C,0x66,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x7E,  //+（加号）
	0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //,（逗号）
	0x00,0x18,0x18,0x18,0x0C,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,  //-（减号）
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //.（点）
	0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x40,0x60,0x30,0x18,  ///（左斜杠）
	0x0C,0x06,0x03,0x01,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x63,0x73,0x6B,0x6B,  //0（数字0）
	0x67,0x63,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x18,0x1C,0x1E,0x18,0x18,0x18,  //1（数字1）
	0x18,0x18,0x18,0x7E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x60,0x30,0x18,0x0C,  //2（数字2）
	0x06,0x03,0x63,0x7F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x60,0x60,0x3C,0x60,  //3（数字3）
	0x60,0x60,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x30,0x38,0x3C,0x36,0x33,0x7F,  //4（数字4）
	0x30,0x30,0x30,0x78,0x00,0x00,0x00,0x00,

	0x00,0x00,0x7F,0x03,0x03,0x03,0x3F,0x70,  //5（数字5）
	0x60,0x60,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x1C,0x06,0x03,0x03,0x3F,0x63,  //6（数字6）
	0x63,0x63,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x7F,0x63,0x60,0x60,0x30,0x18,  //7（数字7）
	0x0C,0x0C,0x0C,0x0C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x63,0x63,0x3E,0x63,  //8（数字8）
	0x63,0x63,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x63,0x63,0x7E,0x60,  //9（数字9）
	0x60,0x60,0x30,0x1E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,  //:（冒号）
	0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,  //;（分号）
	0x00,0x18,0x18,0x0C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x60,0x30,0x18,0x0C,0x06,  //<（小于号）
	0x0C,0x18,0x30,0x60,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0x00,  //=（等于号）
	0x00,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x06,0x0C,0x18,0x30,0x60,  //>（大于号）
	0x30,0x18,0x0C,0x06,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x63,0x30,0x18,0x18,  //?（问号）
	0x18,0x00,0x18,0x18,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x3E,0x63,0x63,0x7B,0x7B,  //@（艾特符）
	0x7B,0x3B,0x03,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x08,0x1C,0x36,0x63,0x63,0x7F,  //A（字母A）
	0x63,0x63,0x63,0x63,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3F,0x66,0x66,0x66,0x3E,0x66,  //B（字母B）
	0x66,0x66,0x66,0x3F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3C,0x66,0x43,0x03,0x03,0x03,  //C（字母C）
	0x03,0x43,0x66,0x3C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x1F,0x36,0x66,0x66,0x66,0x66,  //D（字母D）
	0x66,0x66,0x36,0x1F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x7F,0x66,0x46,0x16,0x1E,0x16,  //E（字母E）
	0x06,0x46,0x66,0x7F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x7F,0x66,0x46,0x16,0x1E,0x16,  //F（字母F）
	0x06,0x06,0x06,0x0F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3C,0x66,0x43,0x03,0x03,0x7B,  //G（字母G）
	0x63,0x63,0x66,0x5C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x63,0x63,0x63,0x63,0x7F,0x63,  //H（字母H）
	0x63,0x63,0x63,0x63,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3C,0x18,0x18,0x18,0x18,0x18,  //I（字母I）
	0x18,0x18,0x18,0x3C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x78,0x30,0x30,0x30,0x30,0x30,  //J（字母J）
	0x33,0x33,0x33,0x1E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x67,0x66,0x36,0x36,0x1E,0x1E,  //K（字母K）
	0x36,0x66,0x66,0x67,0x00,0x00,0x00,0x00,

	0x00,0x00,0x0F,0x06,0x06,0x06,0x06,0x06,  //L（字母L）
	0x06,0x46,0x66,0x7F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x63,0x77,0x7F,0x7F,0x6B,0x63,  //M（字母M）
	0x63,0x63,0x63,0x63,0x00,0x00,0x00,0x00,

	0x00,0x00,0x63,0x67,0x6F,0x7F,0x7B,0x73,  //N（字母N）
	0x63,0x63,0x63,0x63,0x00,0x00,0x00,0x00,

	0x00,0x00,0x1C,0x36,0x63,0x63,0x63,0x63,  //O（字母O）
	0x63,0x63,0x36,0x1C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3F,0x66,0x66,0x66,0x3E,0x06,  //P（字母P）
	0x06,0x06,0x06,0x0F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x63,0x63,0x63,0x63,  //Q（字母Q）
	0x63,0x6B,0x7B,0x3E,0x30,0x70,0x00,0x00,

	0x00,0x00,0x3F,0x66,0x66,0x66,0x3E,0x36,  //R（字母R）
	0x66,0x66,0x66,0x67,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x63,0x06,0x1C,0x30,  //S（字母S）
	0x60,0x63,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x7E,0x7E,0x5A,0x18,0x18,0x18,  //T（字母T）
	0x18,0x18,0x18,0x3C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x63,0x63,0x63,0x63,0x63,0x63,  //U（字母U）
	0x63,0x63,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x63,0x63,0x63,0x63,0x63,0x63,  //V（字母V）
	0x63,0x36,0x1C,0x08,0x00,0x00,0x00,0x00,

	0x00,0x00,0x63,0x63,0x63,0x63,0x63,0x6B,  //W（字母W）
	0x6B,0x7F,0x36,0x36,0x00,0x00,0x00,0x00,

	0x00,0x00,0x63,0x63,0x36,0x36,0x1C,0x1C,  //X（字母X）
	0x36,0x36,0x63,0x63,0x00,0x00,0x00,0x00,

	0x00,0x00,0x66,0x66,0x66,0x66,0x3C,0x18,  //Y（字母Y）
	0x18,0x18,0x18,0x3C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x7F,0x63,0x61,0x30,0x18,0x0C,  //Z（字母Z）
	0x06,0x43,0x63,0x7F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3C,0x0C,0x0C,0x0C,0x0C,0x0C,  //[（左中括号）
	0x0C,0x0C,0x0C,0x3C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x01,0x03,0x07,0x0E,0x1C,  //\（右斜杠）
	0x38,0x70,0x60,0x40,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3C,0x30,0x30,0x30,0x30,0x30,  //]（右中括号）
	0x30,0x30,0x30,0x3C,0x00,0x00,0x00,0x00,

	0x08,0x1C,0x36,0x63,0x00,0x00,0x00,0x00,  //^（乘方等符）
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  //_（下划线）
	0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,

	0x0C,0x0C,0x18,0x00,0x00,0x00,0x00,0x00,  //`（点符）
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x1E,0x30,0x3E,  //a（字母a）
	0x33,0x33,0x33,0x6E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x07,0x06,0x06,0x1E,0x36,0x66,  //b（字母b）
	0x66,0x66,0x66,0x3B,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x3E,0x63,0x03,  //c（字母c）
	0x03,0x03,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x38,0x30,0x30,0x3C,0x36,0x33,  //d（字母d）
	0x33,0x33,0x33,0x6E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x3E,0x63,0x7F,  //e（字母e）
	0x03,0x03,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x1C,0x36,0x26,0x06,0x0F,0x06,  //f（字母f）
	0x06,0x06,0x06,0x0F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x6E,0x33,0x33,  //g（字母g）
	0x33,0x33,0x33,0x3E,0x30,0x33,0x1E,0x00,

	0x00,0x00,0x07,0x06,0x06,0x36,0x6E,0x66,  //h（字母h）
	0x66,0x66,0x66,0x67,0x00,0x00,0x00,0x00,

	0x00,0x00,0x18,0x18,0x00,0x1C,0x18,0x18,  //i（字母i）
	0x18,0x18,0x18,0x3C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x60,0x60,0x00,0x70,0x60,0x60,  //j（字母j）
	0x60,0x60,0x60,0x60,0x66,0x66,0x3C,0x00,

	0x00,0x00,0x07,0x06,0x06,0x66,0x36,0x1E,  //k（字母k）
	0x1E,0x36,0x66,0x67,0x00,0x00,0x00,0x00,

	0x00,0x00,0x1C,0x18,0x18,0x18,0x18,0x18,  //l（字母l）
	0x18,0x18,0x18,0x3C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x37,0x7F,0x6B,  //m（字母m）
	0x6B,0x6B,0x6B,0x6B,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x3B,0x66,0x66,  //n（字母n）
	0x66,0x66,0x66,0x66,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x3E,0x63,0x63,  //o（字母o）
	0x63,0x63,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x3B,0x66,0x66,  //p（字母p）
	0x66,0x66,0x66,0x3E,0x06,0x06,0x0F,0x00,

	0x00,0x00,0x00,0x00,0x00,0x6E,0x33,0x33,  //q（字母q）
	0x33,0x33,0x33,0x3E,0x30,0x30,0x78,0x00,

	0x00,0x00,0x00,0x00,0x00,0x3B,0x6E,0x46,  //r（字母r）
	0x06,0x06,0x06,0x0F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x3E,0x63,0x06,  //s（字母s）
	0x1C,0x30,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x08,0x0C,0x0C,0x3F,0x0C,0x0C,  //t（字母t）
	0x0C,0x0C,0x6C,0x38,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x33,0x33,0x33,  //u（字母u）
	0x33,0x33,0x33,0x6E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x66,0x66,0x66,  //v（字母v）
	0x66,0x66,0x3C,0x18,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x63,0x63,0x63,  //w（字母w）
	0x6B,0x6B,0x7F,0x36,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x63,0x36,0x1C,  //x（字母x）
	0x1C,0x1C,0x36,0x63,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x63,0x63,0x63,  //y（字母y）
	0x63,0x63,0x63,0x7E,0x60,0x30,0x1F,0x00,

	0x00,0x00,0x00,0x00,0x00,0x7F,0x33,0x18,  //z（字母z）
	0x0C,0x06,0x63,0x7F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x70,0x18,0x18,0x18,0x0E,0x18,  //{（左大括号）
	0x18,0x18,0x18,0x70,0x00,0x00,0x00,0x00,

	0x00,0x00,0x18,0x18,0x18,0x18,0x00,0x18,  //|（竖线）
	0x18,0x18,0x18,0x18,0x00,0x00,0x00,0x00,

	0x00,0x00,0x0E,0x18,0x18,0x18,0x70,0x18,  //}（右大括号）
	0x18,0x18,0x18,0x0E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x6E,0x3B,0x00,0x00,0x00,0x00,  //~（波浪号）
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x08,0x1C,0x36,0x63,  //（空格）
	0x63,0x63,0x7F,0x00,0x00,0x00,0x00,0x00,
};
//=====================================================================
 // 汉字字模表
 // 汉字库: 宋体（16*16） 横向取模右高位,数据排列:从左到右从上到下
 //
 //=====================================================================
#define ChineseCharacterLength (sizeof(GB_16)/sizeof(typFNT_GB16))   //记录汉字的个数
 const static typFNT_GB16  GB_16[] =          // 数据表
 {
 "杨", 0x80,0x00,0x80,0x00,0x40,0x01,0x20,0x02,
       0x10,0x04,0x08,0x0A,0xF4,0x77,0x83,0x20,
       0x80,0x00,0xF8,0x0F,0x80,0x00,0x88,0x08,
       0x90,0x04,0xA0,0x12,0xFE,0x3F,0x00,0x00,

 "迎", 0x20,0x02,0x20,0x22,0xFF,0x7F,0x20,0x02,
       0x10,0x3E,0x90,0x22,0xFE,0x23,0x10,0x3E,
       0x50,0x22,0xFC,0x22,0x44,0x3E,0x44,0x22,
       0x44,0x22,0x7C,0x22,0x44,0x29,0x80,0x10,

 "尧", 0x10,0x04,0x10,0x24,0xFF,0x7F,0x10,0x04,
       0x80,0x10,0xFC,0x3F,0x04,0x10,0x04,0x10,
       0xFC,0x1F,0x04,0x10,0x04,0x00,0x04,0x00,
       0x04,0x00,0x02,0x00,0x02,0x00,0x01,0x00,
 };


#endif /* LCD_H_ */
